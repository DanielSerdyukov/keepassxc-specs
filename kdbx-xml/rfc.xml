<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd' []>
<rfc ipr="trust200902" category="info" docName="keepass2-xml-rfc">
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc private="yes"?>
<?rfc topblock="yes"?>
<?rfc comments="no"?>
<front>
<title abbrev="KeePass2 XML">KeePass2 XML Payload Format</title>

<author initials="J." surname="Bevendorff" fullname="Janek Bevendorff">
<organization>KeePassXC Team</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email></email>
<uri></uri>
</address>
</author>
<date year="2018" month="February" day="19"/>

<area>Security</area>
<workgroup></workgroup>
<keyword>keepass</keyword>
<keyword>keepassxc</keyword>


<abstract>
<t>This document describes the XML payload format used in KDBX 3.1 and 4.0
containers.  KDBX is an encrypted, XML-based container format for secure
password storage used by KeePass 2.x, KeePassXC and various other password
managers.  This document only describes the actual XML payload and not
the KDBX container format itself.
</t>
</abstract>


<note title="Status of This Memo">
<t>This document is not normative for the KDBX file format; it is
published for informative purposes with the goal to support development
of KDBX-based password management applications.
</t>
<t>The information contained in this document is a work-in-progress reverse
engineering effort of the KDBX file format and likely to be incomplete or
even incorrect at this point in time. This memo is not recommended for
use as reference guide yet.
</t>
</note>


<note title="Copyright Notice">
<t>Copyright (C) 2018 KeePassXC Team
</t>
</note>

</front>

<middle>

<section anchor="introduction" title="Introduction">
<t>This document describes the payload format used in KDBX (version 3.1 and
4.0) files.  The payload is encoded as XML (&quot;Extensible Markup Language&quot; <xref target="XML"/>).
</t>
<t>KDBX file format versions 3.1 and 4.0 use the same XML structure with minor
differences in the tags supported.  A note is added where KDBX 3.1 and 4.0
differ.
</t>
<t>The XML payload itself is mostly self-contained, but may reference data
from the outer KDBX container. A note is given where this is the case.
</t>
</section>

<section anchor="conventions" title="Conventions">
<t>In this document, the keywords 'MUST', 'MUST NOT', 'REQUIRED',
'SHALL', 'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'MAY',
and 'OPTIONAL' in capital letters are used to indicate requirements
 for the format specification. Their meaning is described in <xref target="RFC2119"/>.
</t>
<t>The term 'Database' refers to the decrypted XML document payload of a
 KDBX container.
</t>
<t>Conversely, the term 'KDBX' refers to the full container, including
 its encrypted XML payload.
</t>

<section anchor="general-database-structure" title="General Database Structure">
<t>A database comprises two main parts: a <spanx style="emph">meta data section</spanx> and the actual
<spanx style="emph">data section</spanx>.
</t>
<t>The meta data section contains general information about the database
itself, maintenance information (e.g., when and how to clean up deleted
entries), access and modification information (e.g., date and time of
the last database title change), and additional global resources (e.g.,
custom icons).
</t>
<t>The data section contains the actual user data as a tree structure of
<spanx style="emph">groups</spanx> and <spanx style="emph">entries</spanx>.
</t>
<t>A <spanx style="emph">group</spanx> is an element with various attributes containing zero or
more <spanx style="emph">entries</spanx>.  A group can also contain zero or more sub groups,
which can again contain groups and entries.  The format of a group
is described in <xref target="groups"/>.
</t>
<t>An <spanx style="emph">entry</spanx> is a set of user credentials and other related data. An entry
MUST have a single parent group.  The attributes of an entry are
described in <xref target="entries"/>.
</t>
<t>A database MUST have exactly one <spanx style="emph">root group</spanx>, which acts as common
ancestor of all other groups and entries.
</t>
</section>
</section>

<section anchor="xml-format-description" title="XML Format Description">

<section anchor="xml-schema" title="XML Schema">
<t>A full XML 1.0 schema <xref target="XMLSchema"/> is provided in:
<eref target="kdbx4.0-schema.xsd">kdbx4.0-schema.xsd</eref>
</t>
<t>The schema file is only intended for informative purposes.  In practice,
parsers SHALL NOT use this schema for strict validation.  Most importantly,
parsers SHALL NOT make assumptions about the order of elements.  <spanx style="verb">&lt;xs:sequence&gt;</spanx>
elements are used exclusively for Schema 1.0 compatibility, while in
reality, no particular element order is guaranteed.
</t>
<t>Given the sensitive nature of the data contained in a passwords file,
a parser SHOULD be reasonably forgiving while trying to read the XML
data of a successfully decrypted KDBX file.
</t>

<section anchor="basic-data-types" title="Basic Data Types">
<t>All data stored in a KeePass XML file is UTF-8 string data.  Most XML
elements or attributes can contain arbitrary string values, but some elements
or attributes require special data types, which impose extra restrictions
on the allowed string values.
</t>
<t>The following special data types exist:
</t>
<t>
<list style="symbols">
<t>An <spanx style="emph">INTEGER</spanx> is a numeric decimal string consisting of one or more
characters in the range 0 to 9.  <spanx style="emph">INTEGERs</spanx> can have a negative sign <spanx style="verb">-</spanx>
in front.</t>
<t>A <spanx style="emph">BOOLEAN</spanx> is represented by the strings <spanx style="verb">True</spanx> and <spanx style="verb">False</spanx>.  The
alternative forms <spanx style="verb">true</spanx> and <spanx style="verb">false</spanx>, as well as <spanx style="verb">1</spanx> and <spanx style="verb">0</spanx>, are also possible.</t>
<t>A <spanx style="emph">DATETIME</spanx> is an XML datetime in ISO 8601 format <xref target="RFC3339"/>.</t>
<t>A <spanx style="emph">COLOR</spanx> is a six-digit hexadecimal RGB color code (characters 0-9 and A-F or
a-f), preceded by a # character (e.g., #FF00FF for yellow)</t>
<t>A <spanx style="emph">BLOB</spanx> is a Base64-encoded <xref target="RFC4648"/> string representation of
arbitrary binary data.</t>
<t>A <spanx style="emph">STRING MAP</spanx> is a complex XML type with exactly two child elements
<spanx style="verb">&lt;Key&gt;</spanx> and <spanx style="verb">&lt;Value&gt;</spanx> describing a mapping between a key string and a
value string.</t>
</list>
</t>
</section>

<section anchor="identifiers" title="Identifiers">
<t>Unique resources inside the database are identified by a <spanx style="emph">UUID</spanx>, which is a globally
unique 128-bit (16-byte) identifier. <spanx style="emph">UUIDs</spanx> are encoded as <spanx style="emph">BLOBs</spanx>.
</t>
</section>
</section>

<section anchor="main-elements" title="Main Elements">
<t>A KeePass XML database SHOULD start with an XML declaration.  The encoding of
 the XML data MUST be UTF-8 <xref target="RFC3629"/>.
</t>
<t>The XML document MUST have a root element named <spanx style="verb">&lt;KeePassFile&gt;</spanx>.  The
 <spanx style="verb">&lt;KeePassFile&gt;</spanx> root element MUST have exactly two child nodes <spanx style="verb">&lt;Meta&gt;</spanx>
 and <spanx style="verb">&lt;Root&gt;</spanx>:
</t>

<figure align="center"><artwork align="center">
&lt;?xml version="1.0" encoding="utf-8" standalone="yes"?&gt;
&lt;KeePassFile&gt;
    &lt;Meta&gt;
        &lt;!-- Database meta data --&gt;
    &lt;/Meta&gt;
    &lt;Root&gt;
        &lt;!-- Database root group --&gt;
        &lt;!-- Optional deleted object records --&gt;
    &lt;/Root&gt;
&lt;/KeePassFile&gt;
</artwork></figure>
<t><spanx style="verb">&lt;Meta&gt;</spanx> contains the database's meta data section, while <spanx style="verb">&lt;Root&gt;</spanx>
contains the actual data section, i.e., the root group (cf.
<xref target="general-database-structure"/>).
</t>
<t>Besides the database's root group, <spanx style="verb">&lt;Root&gt;</spanx> MAY also contain historical
records of deleted objects, whose format is described in <xref target="deleted-objects"/>.
</t>
</section>

<section anchor="meta-data-section" title="Meta Data Section">
<t>The <spanx style="verb">&lt;Meta&gt;</spanx> element MAY contain any of the following elements at most once
to describe various database meta data.
</t>
<t>
<list style="hanging">
<t hangText="&lt;HeaderHash&gt;">
The SHA-256 <xref target="RFC4634"/> hash of the KDBX header data as <spanx style="emph">BLOB</spanx>.  This element is
only useful for KDBX 3.1 or lower, but MAY also be present in KDBX 4.0 or higher.</t>
<t hangText="&lt;SettingsChanged&gt;">
<spanx style="emph">DATETIME</spanx> of the last change of database meta data or KDBX container
settings.  This element is only specified for KDBX containers <spanx style="strong">version 4.0
or higher</spanx> and MUST NOT be present in KDBX 3.1 or lower.</t>
<t hangText="&lt;Generator&gt;">
The name of the program that generated the KDBX file.</t>
<t hangText="&lt;DatabaseName&gt;">
An optional name for the database.</t>
<t hangText="&lt;DatabaseNameChanged&gt;">
<spanx style="emph">DATETIME</spanx> of the last change of <spanx style="verb">&lt;DatabaseName&gt;</spanx>.</t>
<t hangText="&lt;DatabaseDescription&gt;">
An optional description of the database.</t>
<t hangText="&lt;DatabaseDescriptionChanged&gt;">
<spanx style="emph">DATETIME</spanx> of the last change of <spanx style="verb">&lt;DatabaseDescription&gt;</spanx>.</t>
<t hangText="&lt;DefaultUserName&gt;">
The username to use as a default when creating a new entry in the
database.</t>
<t hangText="&lt;DefaultUserNameChanged&gt;">
<spanx style="emph">DATETIME</spanx> of the last change of <spanx style="verb">&lt;DefaultUserName&gt;</spanx>.</t>
<t hangText="&lt;MaintenanceHistoryDays&gt;">
<spanx style="emph">INTEGER</spanx> indicating the maximum age of the oldest history item
to keep in days.</t>
<t hangText="&lt;Color&gt;">
A <spanx style="emph">COLOR</spanx> that can be used for coloring the program icon or database tab
inside the password manager application.</t>
<t hangText="&lt;MasterKeyChanged&gt;">
<spanx style="emph">DATETIME</spanx> of the last change of the database's master key.</t>
<t hangText="&lt;MasterKeyChangeRec&gt;">
<spanx style="emph">INTEGER</spanx> indicating the number of days after which the password manager
SHOULD recommend changing the database's master key (-1 means 'never')</t>
<t hangText="&lt;MasterKeyChangeForce&gt;">
<spanx style="emph">INTEGER</spanx> indicating the number of days after which the password manager
SHOULD force changing the database's master key (-1 means 'never')</t>
<t hangText="&lt;MasterKeyChangeForceOnce&gt;">
<spanx style="emph">BOOLEAN</spanx> indicating that the password manager SHOULD force changing the
database's master key next time the database is opened.  This element SHOULD
be removed or set to 'False' once the master key has been changed.</t>
<t hangText="&lt;MemoryProtection&gt;">
A complex XML type for configuring which fields SHOULD be protected by
in-memory encryption at runtime.  The element MAY have the <spanx style="emph">BOOLEAN</spanx> child
elements <spanx style="verb">&lt;ProtectTitle&gt;</spanx>, <spanx style="verb">&lt;ProtectUserName&gt;</spanx>, <spanx style="verb">&lt;ProtectPassword&gt;</spanx>,
<spanx style="verb">&lt;ProtectURL&gt;</spanx>, and <spanx style="verb">&lt;ProtectNotes&gt;</spanx> for protection of the title, username,
password, URL and notes fields.</t>
<t hangText="&lt;CustomIcons&gt;">
A complex XML type containing a sequence of zero or more custom icons, which
can be used for visually customizing groups and entries (described in <xref target="groups"/>
and <xref target="entries"/>).  An icon is an <spanx style="verb">&lt;Icon&gt;</spanx> element, which has exactly two children
<spanx style="verb">&lt;UUID&gt;</spanx> (a <spanx style="emph">UUID</spanx>) and <spanx style="verb">&lt;Data&gt;</spanx>.  <spanx style="verb">&lt;Data&gt;</spanx> contains the icon image data as <spanx style="emph">BLOB</spanx>.</t>
<t hangText="&lt;RecycleBinEnabled&gt;">
<spanx style="emph">BOOLEAN</spanx> indicating whether the database has an enable recycle bin.</t>
<t hangText="&lt;RecycleBinUUID&gt;">
The <spanx style="emph">UUID</spanx> of the recycle bin group inside the database.</t>
<t hangText="&lt;RecycleBinChanged&gt;">
<spanx style="emph">DATETIME</spanx> of the last change to the recycle bin.</t>
<t hangText="&lt;EntryTemplatesGroup&gt;">
The <spanx style="emph">UUID</spanx> of the group that contains templates for the creation of
new entries.</t>
<t hangText="&lt;EntryTemplatesGroupChanged&gt;">
<spanx style="emph">DATETIME</spanx> of the last change to the templates group.</t>
<t hangText="&lt;HistoryMaxItems&gt;">
An <spanx style="emph">INTEGER</spanx> indicating the maximum number of items the history of
an element may have (history items are described in <xref target="entry-history"/>).
When the number of items in an entry's history exceeds this number, the
password manager SHOULD delete the oldest history items until the number
of history items no longer exceeds this value.</t>
<t hangText="&lt;HistoryMaxSize&gt;">
An <spanx style="emph">INTEGER</spanx> indicating the maximum history size in bytes. If an entry's
history exceeds this size, the password manager SHOULD delete the oldest
history items, until the total history size no longer exceeds this value.</t>
<t hangText="&lt;LastSelectedGroup&gt;">
<spanx style="emph">UUID</spanx> of the group that was last selected by the user.</t>
<t hangText="&lt;LastTopVisibleGroup&gt;">
<spanx style="emph">UUID</spanx> of the last 'top' item. This seems to always be the root group
of the database.</t>
<t hangText="&lt;Binaries&gt;">
A sequence of zero or more <spanx style="verb">&lt;Binary&gt;</spanx> elements containing files attached
to entries in the database.  Each <spanx style="verb">&lt;Binary&gt;</spanx> element is a <spanx style="emph">BLOB</spanx> containing
the file's contents. <spanx style="verb">&lt;Binary&gt;</spanx> elements MUST have an <spanx style="verb">ID</spanx> attribute, which
is a unique <spanx style="emph">INTEGER</spanx> identifying the <spanx style="emph">BLOB</spanx> data and a <spanx style="emph">BOOLEAN</spanx> attribute
<spanx style="verb">Compressed</spanx>, indicating whether the <spanx style="emph">BLOB</spanx> data is Gzip-compressed <xref target="RFC1952"/>.
A database SHOULD NOT contain two <spanx style="verb">&lt;Binary&gt;</spanx> elements with the same <spanx style="emph">BLOB</spanx> data.</t>
<t hangText="&lt;CustomData&gt;">
A sequence of zero or more <spanx style="emph">STRING MAP</spanx> <spanx style="verb">&lt;Item&gt;</spanx> elements. <spanx style="verb">&lt;Item&gt;</spanx>
elements can be used by plugins to store arbitrary string data at database level.</t>
</list>
</t>
</section>

<section anchor="data-section" title="Data Section">

<section anchor="groups" title="Groups">
</section>

<section anchor="entries" title="Entries">

<section anchor="entry-history" title="Entry History">
</section>
</section>

<section anchor="deleted-objects" title="Deleted Objects">
</section>
</section>
</section>

<section anchor="security-considerations" title="Security Considerations">
<t>KDBX is an encrypted container format.  The security of the XML payload
described in this document depends on the strength of the cipher and
passphrase / key file used for encrypting the encapsulating KDBX container.
</t>
<t>In addition, all security considerations for <xref target="XML"/> apply as well,
including the use of recursive XML entities, which can consume an
arbitrarily large amount of memory on the user's system during parsing.
</t>
</section>

</middle>
<back>
<references title="Normative References">
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3339.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3629.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml"?>
<reference anchor="XML" target="https://www.w3.org/TR/2008/REC-xml-20081126/">
    <front>
        <title>Extensible Markup Language (XML) 1.0 (Fifth Edition)</title>
        <author initials="T." surname="Bray" fullname="Tim Bray">
            <organization>Textuality and Netscape</organization>
            <address>
                <email>tbray@textuality.com</email>
            </address>
        </author>
        <author initials="J." surname="Paoli" fullname="Jean Paoli">
            <organization>Microsoft</organization>
            <address>
                <email>jeanpa@microsoft.com</email>
            </address>
        </author>
        <author initials="C. M." surname="Sperberg-McQueen" fullname="C. M. Sperberg-McQueen">
            <organization>W3C</organization>
            <address>
                <email>cmsmcq@w3.org</email>
            </address>
        </author>
        <author initials="E." surname="Eve" fullname="Eve Maler">
            <organization>Sun Microsystems, Inc.</organization>
            <address>
                <email>eve.maler@east.sun.com</email>
            </address>
        </author>
        <author initials="F." surname="Yergeau" fullname="François Yergeau"/>
        <date day="26" month="November" year="2008"/>
    </front>
</reference>
<reference anchor="XMLSchema" target="https://www.w3.org/TR/xmlschema-1/">
    <front>
        <title>XML Schema Part 1: Structures Second Edition</title>
        <author initials="H. S." surname="Thompson" fullname="Henry S. Thompson">
            <organization>University of Edinburgh</organization>
            <address>
                <email>ht@cogsci.ed.ac.uk</email>
            </address>
        </author>
        <author initials="D." surname="Beech" fullname="David Beech">
            <organization>Oracle Corporation</organization>
            <address>
                <email>David.Beech@oracle.com</email>
            </address>
        </author>
        <author initials="M." surname="Maloney" fullname="Murray Maloney">
            <organization>Commerce One</organization>
            <address>
                <email>murray@muzmo.com</email>
            </address>
        </author>
        <author initials="N." surname="Mendelsohn" fullname="Noah Mendelsohn">
            <organization>Lotus Development Corporation</organization>
            <address>
                <email>Noah_Mendelsohn@lotus.com</email>
            </address>
        </author>
        <date day="28" month="October" year="2004"/>
    </front>
</reference>
</references>
<references title="Informative References">
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1952.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4634.xml"?>
</references>

</back>
</rfc>
